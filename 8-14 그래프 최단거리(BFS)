다음 그래프에서 1번 정점에서 각 정점으로 가는 최소 이동 간선수를 출력하세요.

입력설명
첫째 줄에는 정점의 수 N(1<= N <= 20) 와 간선의 수 M가 주어진다. 그 다음부터 M줄에 걸쳐 연결정보가 주어진다.

출력설명
1번 정점에서 각 정점으로 가는 최소 간선수를 2번 정점부터 차례대로 출력하세요.

입력예제 1

6 9
1 3
1 4
2 1
2 5
3 4
4 5
4 6
6 2
6 5

출력결과 1

2 : 3
3 : 1
4 : 1
5 : 2
6 : 2



import java.util.*;

class Main {

    static int n, m;
    static List<List<Integer>> graph;
    static int[] ch, dis;


    public static void main(String[] args) {

        Scanner input = new Scanner(System.in);
        n = input.nextInt();
        m = input.nextInt();

        graph = new ArrayList<>();

        for (int i = 0; i <= n; i++) {
            graph.add(new ArrayList<>());
        }

        for (int i = 0; i < m; i++) {
            int a = input.nextInt();
            int b = input.nextInt();

            graph.get(a).add(b);
        }

        ch = new int[n + 1];
        dis = new int[n + 1];

        BFS(1);

        for (int i = 2; i <= n; i++) {
            System.out.println(i +" : " + dis[i]);
        }
    }

    private static void BFS(int v) {
        Deque<Integer> deque = new ArrayDeque<>();
        ch[v] = 1;
        dis[v] = 0;

        deque.offer(v);

        while (!deque.isEmpty()) {
            Integer cv = deque.poll();

            for (int nv : graph.get(cv)) {
                if (ch[nv] == 0) {
                    ch[nv] = 1;
                    deque.offer(nv);
                    dis[nv] = dis[cv] + 1;
                }
            }
        }
    }


}
